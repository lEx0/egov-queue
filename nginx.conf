

worker_processes  1;
error_log /dev/stderr debug;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    resolver 127.0.0.11 ipv6=off;
    include       mime.types;
    default_type  application/octet-stream;
    lua_package_path "/etc/nginx/lua/?.lua;;";

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    # See Move default writable paths to a dedicated directory (#119)
    # https://github.com/openresty/docker-openresty/issues/119
    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
    scgi_temp_path        /var/run/openresty/nginx-scgi;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    charset utf-8;
    source_charset utf-8;

    init_worker_by_lua_block {
        local uuid = require 'resty.jit-uuid'
        uuid.seed()
    }

    server {
        listen 9191;
        server_name _;

        default_type text/html;

        # страница для пользователей - прокси в егов
        location / {
            content_by_lua_file /etc/nginx/lua/pages/aman.lua;
        }

        location /test {
            set_by_lua_file $res /etc/nginx/lua/pages/test.lua;

            echo $res;
        }

        location /set-offset {
            content_by_lua_file /etc/nginx/lua/pages/set-offset.lua;
        }

        location /lua {
            content_by_lua_block {
                local q = require 'resty.queue'
                local pos, err = q.getPosition(5)
                ngx.say(pos)
            }
        }
    }
}

